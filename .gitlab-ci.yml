image:
  name: "us.gcr.io/tacit-196502/go-build:feature_auth-cluster1"
  
stages: 
  - testing
  - build
  - deploy

testing:
  stage: testing
  script:
    - mkdir -p /root/src/tacit-api
    - cp -R . /root/src/tacit-api
    - cd /root/src/tacit-api
    - dep ensure
    - chmod +x ./scripts/runTest.sh
    - ./scripts/runTest.sh
    - go test

build:
  stage: build
  script:
    - docker login -u _json_key -p "$DOCKER_PASSWORD" https://us.gcr.io
    - mkdir -p /root/src/tacit-api
    - cp -R . /root/src/tacit-api
    - cd /root/src/tacit-api
    - dep ensure
    - CGO_ENABLED=0 go build
    - docker build -t tcr.tacit-app.com/tacit/$CI_PROJECT_NAME:$CI_COMMIT_SHA .
    - export DOCKER_FRIENDLY_REF_NAME=$(echo $CI_COMMIT_REF_NAME | sed "s/\//_/g")
    - docker tag tcr.tacit-app.com/tacit/$CI_PROJECT_NAME:$CI_COMMIT_SHA tcr.tacit-app.com/tacit/$CI_PROJECT_NAME:$DOCKER_FRIENDLY_REF_NAME
    - docker push tcr.tacit-app.com/tacit/$CI_PROJECT_NAME:$CI_COMMIT_SHA
    - docker push tcr.tacit-app.com/tacit/$CI_PROJECT_NAME:$DOCKER_FRIENDLY_REF_NAME
    
.deploy_template: &deploy_dev
  stage: deploy
  script:
    - echo $GITLAB_KEY_PEM > /opt/cert/gitlab-key.pem
    - cat /opt/cert/gitlab-key.pem
    - kubectl config set-credentials gitlab --client-certificate=/opt/cert/gitlab.pem --client-key=/opt/cert/gitlab-key.pem
    - kubectl config set-context cluster-1 --cluster=cluster-1 --user=gitlab
    - kubectl config use-context  cluster-1
    - kubectl config view
    - kubectl get pods
    - export DOCKER_FRIENDLY_REF_NAME=$(echo $CI_COMMIT_REF_NAME | sed "s/\//_/g")
    - sed "s/{{TAG}}/$DOCKER_FRIENDLY_REF_NAME/g" kube/deployment.yaml > kube/finalDeployment.yaml
    - kubectl apply -f ./kube/finalDeployment.yaml
    
deploy_feature: 
    <<: *deploy_dev
    when: manual
    except: 
        - master
        - develop

deploy_develop_master: 
    <<: *deploy_dev
    only:
        - master
        - develop
    

#package:
#  script:
#    - docker ps
 
